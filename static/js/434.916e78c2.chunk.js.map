{"version":3,"file":"static/js/434.916e78c2.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDaetal.styled.js","pages/MovieDetails/MovieDetails.jsx","utils/moviedb-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const FilmCard = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-top: 15px;\n`;\n\nexport const BackLink = styled(Link)`\n  text-decoration: none;\n  padding: 15px;\n`;","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'utils/moviedb-api';\nimport image from '../../noposter.png';\nimport { BackLink, FilmCard } from './MovieDaetal.styled';\n\nconst POSTER_IMAGE_PATH = 'https://image.tmdb.org/t/p/w342';\n\nconst MovieDetails = () => {\n  const [title, setTitle] = useState('');\n  const [releaseYear, setReleaseYear] = useState();\n  const [posterImg, setPosterImg] = useState('');\n  const [genres, setGenres] = useState('');\n  const [overview, setOverview] = useState('');\n  const [userScore, setUserScore] = useState();\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getMovie = async id => {\n      try {\n        const {\n          title,\n          poster_path,\n          genres,\n          release_date,\n          overview,\n          vote_average,\n        } = await getMovieDetails(id);\n        setTitle(title);\n        setReleaseYear(release_date.slice(0, 4));\n        setGenres(genres.map(({ name }) => name).join(' '));\n        setOverview(overview);\n        setPosterImg(poster_path ? POSTER_IMAGE_PATH + poster_path : image);\n        setUserScore(Math.round(vote_average * 10));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink to={backLocationRef.current}> Go back</BackLink>\n      <FilmCard>\n        <img src={posterImg} alt={title} width=\"342\" />\n        <div>\n          <h2>\n            {title} ({releaseYear})\n          </h2>\n          <p>User Score: {userScore}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n\n          <p>{genres}</p>\n        </div>\n      </FilmCard>\n      <ul>\n        <li>\n          <Link to=\"cast\">cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading sub...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\nconst API_KEY = '65004062449cedf299d488ba09607cf0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['accept'] = 'application/json';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/movie/week`);\n  return data;\n};\n\nexport const getCasts = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      query: query,\n      include_adult: true,\n      language: 'en-US',\n      page: 1,\n      region: 'US',\n    },\n  });\n  return data;\n};"],"names":["FilmCard","styled","_templateObject","_taggedTemplateLiteral","BackLink","Link","_templateObject2","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","releaseYear","setReleaseYear","_useState5","_useState6","posterImg","setPosterImg","_useState7","_useState8","genres","setGenres","_useState9","_useState10","overview","setOverview","_useState11","_useState12","userScore","setUserScore","movieId","useParams","location","useLocation","backLocationRef","useRef","state","from","useEffect","getMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","_yield$getMovieDetail","_title","poster_path","_genres","release_date","_overview","vote_average","_context","prev","next","getMovieDetails","sent","slice","map","_ref2","name","join","Math","round","t0","console","log","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","to","current","src","alt","width","Suspense","fallback","Outlet","axios","api_key","language","getTrending","_yield$axios$get","data","abrupt","getCasts","_callee2","_yield$axios$get2","_context2","concat","getReviews","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getSearchMovies","_ref5","_callee5","query","_yield$axios$get5","_context5","params","include_adult","page","region","_x4"],"sourceRoot":""}