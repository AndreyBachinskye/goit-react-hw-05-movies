{"version":3,"file":"static/js/307.ff2963ef.chunk.js","mappings":"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","sources":["components/CastItem/CastItem.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","utils/moviedb-api.js"],"sourcesContent":["import image from '../../nophoto.jpg';\nimport PropTypes from 'prop-types';\n\nconst PROFILE_IMAGE_PATH = 'https://image.tmdb.org/t/p/w185';\n\nconst CastItem = ({ name, character, profile_path }) => {\n  const imagePath = profile_path ? PROFILE_IMAGE_PATH + profile_path : image;\n\n  return (\n    <li>\n      <img src={imagePath} alt={name} width=\"185\" />\n      <p>{name}</p>\n      <p>Character: {character}</p>\n    </li>\n  );\n};\n\nCastItem.propTypes = {\n  name: PropTypes.string,\n  character: PropTypes.string,\n  profile_path: PropTypes.string,\n};\n\nexport default CastItem;","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 10px;\n  flex-wrap: wrap;\n  list-style: none;\n`;","import CastItem from 'components/CastItem/CastItem';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCasts } from 'utils/moviedb-api';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [castList, setCastList] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCastList = async id => {\n      try {\n        const { cast } = await getCasts(id);\n        setCastList(\n          cast.map(({ id, name, character, profile_path }) => ({\n            id,\n            name,\n            character,\n            profile_path,\n          }))\n        );\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCastList(movieId);\n  }, [movieId]);\n  return (\n    <CastList>\n      {castList.map(({ id, name, character, profile_path }) => (\n        <CastItem\n          key={id}\n          name={name}\n          character={character}\n          profile_path={profile_path}\n        />\n      ))}\n    </CastList>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\nconst API_KEY = '65004062449cedf299d488ba09607cf0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['accept'] = 'application/json';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/movie/week`);\n  return data;\n};\n\nexport const getCasts = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      query: query,\n      include_adult: true,\n      language: 'en-US',\n      page: 1,\n      region: 'US',\n    },\n  });\n  return data;\n};"],"names":["_ref","name","character","profile_path","imagePath","_jsxs","children","_jsx","src","alt","width","CastList","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","castList","setCastList","movieId","useParams","useEffect","getCastList","_asyncToGenerator","_regeneratorRuntime","_callee","id","_yield$getCasts","cast","_context","prev","next","getCasts","sent","map","_ref2","t0","console","log","stop","_x","apply","arguments","_ref3","CastItem","axios","api_key","language","getTrending","_yield$axios$get","data","abrupt","_callee2","_yield$axios$get2","_context2","concat","getReviews","_callee3","_yield$axios$get3","_context3","_x2","getMovieDetails","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getSearchMovies","_ref5","_callee5","query","_yield$axios$get5","_context5","params","include_adult","page","region","_x4"],"sourceRoot":""}