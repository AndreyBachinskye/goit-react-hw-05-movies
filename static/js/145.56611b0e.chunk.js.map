{"version":3,"file":"static/js/145.56611b0e.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.style.js","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","utils/moviedb-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  color: blue;\n  &:visited {\n    color: blue;\n  }\n`;","import { useLocation } from 'react-router-dom';\nimport { MovieLink } from './MovieList.style';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies, path = '' }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <MovieLink to={`${path + id}`} state={{ from: location }}>\n              {title}\n            </MovieLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n  path: PropTypes.string,\n};\nexport default MovieList;","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ onSubmit, queryString }) => {\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setQuery(queryString);\n  }, [queryString]);\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ query: query });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">search</button>\n    </form>\n  );\n};\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func,\n  queryString: PropTypes.string,\n};\n\nexport default SearchForm;","import { useEffect, useState } from 'react';\nimport { getSearchMovies } from 'utils/moviedb-api';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from 'components/MovieList/MovieList';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [movieList, setMovieList] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const getSearchMoviesList = async query => {\n      try {\n        const { results } = await getSearchMovies(query);\n        setMovieList(results.map(({ id, title }) => ({ id, title })));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    if (query === '') {\n      setMovieList([]);\n      return;\n    }\n    getSearchMoviesList(query);\n  }, [query]);\n\n  const handleSubmit = values => {\n    if (query !== values.query) {\n      setSearchParams(values.query === '' ? {} : { query: values.query });\n    }\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} queryString={query} />\n      <MovieList movies={movieList} />\n      {query && movieList.length === 0 && <div>No matches. Try again.</div>}\n      {!query && <div>Please, input key words for search.</div>}\n    </>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\nconst API_KEY = '65004062449cedf299d488ba09607cf0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['accept'] = 'application/json';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/movie/week`);\n  return data;\n};\n\nexport const getCasts = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`);\n  return data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`);\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      query: query,\n      include_adult: true,\n      language: 'en-US',\n      page: 1,\n      region: 'US',\n    },\n  });\n  return data;\n};"],"names":["MovieLink","styled","Link","_templateObject","_taggedTemplateLiteral","_ref","movies","_ref$path","path","location","useLocation","_jsx","children","map","_ref2","id","title","to","concat","state","from","onSubmit","queryString","_useState","useState","_useState2","_slicedToArray","query","setQuery","useEffect","_jsxs","event","preventDefault","type","name","autoComplete","autoFocus","placeholder","value","onChange","target","_searchParams$get","movieList","setMovieList","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","getSearchMoviesList","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getSearchMovie","results","_context","prev","next","getSearchMovies","sent","t0","console","log","stop","_x","apply","arguments","_Fragment","SearchForm","values","MovieList","length","axios","api_key","language","getTrending","_yield$axios$get","data","abrupt","getCasts","_callee2","movieId","_yield$axios$get2","_context2","getReviews","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getMovieDetails","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","_yield$axios$get5","_context5","params","include_adult","page","region","_x4"],"sourceRoot":""}